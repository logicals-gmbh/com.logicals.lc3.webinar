NAMESPACE com.logicals.Basic.Convert
FUNCTION_BLOCK FB_lc_RealTo12Byte_FBD
  {
    instanceName := {visible};
    width := 180;
    height := 238;
    minWidth := 180;
    minHeight := 238;
    maxWidth := 180;
    maxHeight := 238;
    inputValueFieldAreaWidth := 110;
    outputValueFieldAreaWidth := 110;
  }

  VAR_INPUT
    vir_In : REAL := 0.0;
  END_VAR
  VAR_OUTPUT
    vob_Sign : BYTE := 43;
    vob_Mill : BYTE := 48;
    vob_00Thous : BYTE := 48;
    vob_0Thous : BYTE := 48;
    vob_Thous : BYTE := 48;
    vob_Hun : BYTE := 48;
    vob_Ten : BYTE := 48;
    vob_Single : BYTE := 48;
    vob_Dot : BYTE := 46;
    vob_DSing : BYTE := 48;
    vob_DTen : BYTE := 48;
    vob_DHund : BYTE := 48;
  END_VAR

  (*

    // Network 1:
    GE(IN1 := vir_In, IN2 := 0.0, GE => @C(188).GE);
    SEL(G := @C(188).GE, IN0 := 45, IN1 := 43, SEL => vob_Sign);
    ABS(IN := vir_In, ABS => @C(178).ABS);
    MUL(IN1 := @C(178).ABS, IN2 := 1000.0, MUL => @C(177).MUL);
    TO_DINT(IN := @C(177).MUL, TO_DINT => @C(112).TO_DINT);
    DIV(IN1 := @C(112).TO_DINT, IN2 := 1000000000, DIV => @C(101).DIV);
    ADD(IN1 := @C(101).DIV, IN2 := 48, ADD => @C(185).ADD);
    TO_BYTE(IN := @C(185).ADD, TO_BYTE => vob_Mill);
    MOD(IN1 := @C(112).TO_DINT, IN2 := 1000000000, MOD => @C(172).MOD);
    DIV(IN1 := @C(172).MOD, IN2 := 100000000, DIV => @C(110).DIV);
    ADD(IN1 := @C(110).DIV, IN2 := 48, ADD => @C(189).ADD);
    TO_BYTE(IN := @C(189).ADD, TO_BYTE => vob_00Thous);
    MOD(IN1 := @C(172).MOD, IN2 := 100000000, MOD => @C(183).MOD);
    DIV(IN1 := @C(183).MOD, IN2 := 10000000, DIV => @C(169).DIV);
    ADD(IN1 := @C(169).DIV, IN2 := 48, ADD => @C(168).ADD);
    TO_BYTE(IN := @C(168).ADD, TO_BYTE => vob_0Thous);
    MOD(IN1 := @C(183).MOD, IN2 := 10000000, MOD => @C(174).MOD);
    DIV(IN1 := @C(174).MOD, IN2 := 1000000, DIV => @C(173).DIV);
    ADD(IN1 := @C(173).DIV, IN2 := 48, ADD => @C(179).ADD);
    TO_BYTE(IN := @C(179).ADD, TO_BYTE => vob_Thous);
    MOD(IN1 := @C(174).MOD, IN2 := 1000000, MOD => @C(176).MOD);
    DIV(IN1 := @C(176).MOD, IN2 := 100000, DIV => @C(175).DIV);
    ADD(IN1 := @C(175).DIV, IN2 := 48, ADD => @C(182).ADD);
    TO_BYTE(IN := @C(182).ADD, TO_BYTE => vob_Hun);
    MOD(IN1 := @C(176).MOD, IN2 := 100000, MOD => );
    DIV(IN1 := @C(116).MOD, IN2 := 10000, DIV => @C(166).DIV);
    ADD(IN1 := @C(166).DIV, IN2 := 48, ADD => @C(170).ADD);
    TO_BYTE(IN := @C(170).ADD, TO_BYTE => vob_Ten);
    MOD(IN1 := @C(116).MOD, IN2 := 10000, MOD => @C(184).MOD);
    DIV(IN1 := @C(184).MOD, IN2 := 1000, DIV => @C(181).DIV);
    ADD(IN1 := @C(181).DIV, IN2 := 48, ADD => @C(180).ADD);
    TO_BYTE(IN := @C(180).ADD, TO_BYTE => vob_Single);
    MOD(IN1 := @C(184).MOD, IN2 := 1000, MOD => @C(187).MOD);
    DIV(IN1 := @C(187).MOD, IN2 := 100, DIV => @C(171).DIV);
    ADD(IN1 := @C(171).DIV, IN2 := 48, ADD => @C(167).ADD);
    TO_BYTE(IN := @C(167).ADD, TO_BYTE => vob_DSing);
    MOD(IN1 := @C(187).MOD, IN2 := 100, MOD => @C(186).MOD);
    DIV(IN1 := @C(186).MOD, IN2 := 10, DIV => @C(114).DIV);
    ADD(IN1 := @C(114).DIV, IN2 := 48, ADD => @C(108).ADD);
    TO_BYTE(IN := @C(108).ADD, TO_BYTE => vob_DTen);
    MOD(IN1 := @C(186).MOD, IN2 := 10, MOD => @C(190).MOD);
    ADD(IN1 := @C(190).MOD, IN2 := 48, ADD => @C(165).ADD);
    TO_BYTE(IN := @C(165).ADD, TO_BYTE => vob_DHund);

    // Network 2:
    vob_Dot := 46;

  *)

  @VF(128) : @E(vob_0Thous), @R(1790.0, 550.0, 110.0, 19.0);
  @VF(130) : @E(1000), @R(490.0, 930.0, 60.0, 19.0), DINT;
  @VF(131) : @E(vob_Ten), @R(1790.0, 840.0, 110.0, 19.0);
  @VF(133) : @E(1000.0), @R(160.0, 410.0, 90.0, 19.0), REAL;
  @VF(134) : @E(100), @R(700.0, 1030.0, 60.0, 19.0), DINT;
  @VF(135) : @E(48), @R(1410.0, 640.0, 40.0, 19.0), DINT;
  @VF(136) : @E(48), @R(550.0, 410.0, 40.0, 19.0), DINT;
  @VF(137) : @E(10000000), @R(700.0, 570.0, 90.0, 19.0), DINT;
  @VF(138) : @E(10), @R(950.0, 1110.0, 40.0, 19.0), DINT;
  @VF(139) : @E(48), @R(1410.0, 1110.0, 40.0, 19.0), DINT;
  @VF(140) : @E(10000), @R(170.0, 860.0, 110.0, 19.0), DINT;
  @VF(141) : @E(vob_Mill), @R(1790.0, 390.0, 110.0, 19.0);
  @VF(143) : @E(vob_DSing), @R(1790.0, 1010.0, 110.0, 19.0);
  @VF(145) : @E(0.0), @R(300.0, 290.0, 40.0, 19.0), REAL;
  @VF(146) : @E(48), @R(950.0, 1030.0, 40.0, 19.0), DINT;
  @VF(147) : @E(48), @R(540.0, 860.0, 40.0, 19.0), DINT;
  @VF(148) : @E(vob_DHund), @R(1790.0, 1170.0, 110.0, 19.0);
  @VF(150) : @E(48), @R(700.0, 930.0, 40.0, 19.0), DINT;
  @VF(151) : @E(vob_Thous), @R(1790.0, 620.0, 110.0, 19.0);
  @VF(153) : @E(vob_Hun), @R(1790.0, 690.0, 110.0, 19.0);
  @VF(155) : @E(vob_Sign), @R(1790.0, 270.0, 110.0, 19.0);
  @VF(157) : @E(48), @R(700.0, 500.0, 40.0, 19.0), DINT;
  @VF(158) : @E(vob_Single), @R(1790.0, 910.0, 110.0, 19.0);
  @VF(160) : @E(100000000), @R(420.0, 570.0, 100.0, 19.0), DINT;
  @VF(161) : @E(1000000000), @R(320.0, 410.0, 120.0, 19.0), DINT;
  @VF(162) : @E(48), @R(1410.0, 710.0, 40.0, 19.0), DINT;
  @VF(163) : @E(45), @R(410.0, 290.0, 40.0, 19.0), BYTE;
  @VF(164) : @E(43), @R(410.0, 310.0, 40.0, 19.0), BYTE;
  @VF(105) : @E(vir_In), @R(10.0, 270.0, 90.0, 19.0);
  @VF(118) : @E(48), @R(980.0, 570.0, 40.0, 19.0), DINT;
  @VF(119) : @E(vob_Dot), @R(1790.0, 950.0, 110.0, 19.0);
  @VF(120) : @E(46), @R(1660.0, 950.0, 40.0, 19.0), BYTE;
  @VF(121) : @E(100000), @R(1140.0, 710.0, 90.0, 19.0), DINT;
  @VF(122) : @E(1000000), @R(910.0, 640.0, 80.0, 19.0), DINT;
  @VF(123) : @E(vob_00Thous), @R(1790.0, 480.0, 110.0, 19.0);
  @VF(125) : @E(48), @R(1410.0, 1190.0, 40.0, 19.0), DINT;
  @VF(126) : @E(vob_DTen), @R(1790.0, 1090.0, 110.0, 19.0);
  @C(129) : @F(TO_BYTE), @R(1660.0, 550.0, 80.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_BYTE), @R(9.5));
  @C(132) : @F(TO_BYTE), @R(1660.0, 840.0, 80.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_BYTE), @R(9.5));
  @C(142) : @F(TO_BYTE), @R(1660.0, 390.0, 80.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_BYTE), @R(9.5));
  @C(144) : @F(TO_BYTE), @R(1660.0, 1010.0, 80.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_BYTE), @R(9.5));
  @C(149) : @F(TO_BYTE), @R(1660.0, 1170.0, 80.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_BYTE), @R(9.5));
  @C(152) : @F(TO_BYTE), @R(1660.0, 620.0, 80.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_BYTE), @R(9.5));
  @C(154) : @F(TO_BYTE), @R(1660.0, 690.0, 80.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_BYTE), @R(9.5));
  @C(156) : @F(SEL), @R(470.0, 270.0, 120.0, 58.0), BYTE, @I(@N(G), @L(9.5)), @I(@N(IN0), @L(29.5)), @I(@N(IN1), @L(49.5)), @O(@N(SEL), @R(9.5));
  @C(159) : @F(TO_BYTE), @R(1660.0, 910.0, 80.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_BYTE), @R(9.5));
  @C(101) : @F(DIV), @R(500.0, 390.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @C(165) : @F(ADD), @R(1480.0, 1170.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @C(166) : @F(DIV), @R(490.0, 840.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @C(167) : @F(ADD), @R(1070.0, 1010.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @C(168) : @F(ADD), @R(1060.0, 550.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @C(169) : @F(DIV), @R(840.0, 550.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @C(170) : @F(ADD), @R(620.0, 840.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @C(171) : @F(DIV), @R(860.0, 1010.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @C(172) : @F(MOD), @R(500.0, 480.0, 60.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MOD), @R(9.5));
  @C(108) : @F(ADD), @R(1480.0, 1090.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @C(173) : @F(DIV), @R(1060.0, 620.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @C(110) : @F(DIV), @R(630.0, 480.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @C(174) : @F(MOD), @R(840.0, 620.0, 60.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MOD), @R(9.5));
  @C(175) : @F(DIV), @R(1330.0, 690.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @C(112) : @F(TO_DINT), @R(320.0, 390.0, 80.0, 18.0), REAL, @I(@N(IN), @L(9.5)), @O(@N(TO_DINT), @R(9.5));
  @C(176) : @F(MOD), @R(1060.0, 690.0, 60.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MOD), @R(9.5));
  @C(177) : @F(MUL), @R(270.0, 390.0, 40.0, 38.0), REAL, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MUL), @R(9.5));
  @C(178) : @F(ABS), @R(190.0, 390.0, 60.0, 18.0), REAL, @I(@N(IN), @L(9.5)), @O(@N(ABS), @R(9.5));
  @C(114) : @F(DIV), @R(1070.0, 1090.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @C(179) : @F(ADD), @R(1480.0, 620.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @C(180) : @F(ADD), @R(860.0, 910.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @C(116) : @F(MOD), @R(1310.0, 760.0, 60.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MOD), @R(9.5));
  @C(181) : @F(DIV), @R(620.0, 910.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(DIV), @R(9.5));
  @C(182) : @F(ADD), @R(1480.0, 690.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @C(183) : @F(MOD), @R(630.0, 550.0, 60.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MOD), @R(9.5));
  @C(184) : @F(MOD), @R(420.0, 910.0, 60.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MOD), @R(9.5));
  @C(185) : @F(ADD), @R(630.0, 390.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @C(186) : @F(MOD), @R(860.0, 1090.0, 60.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MOD), @R(9.5));
  @C(187) : @F(MOD), @R(620.0, 1010.0, 60.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MOD), @R(9.5));
  @C(188) : @F(GE), @R(360.0, 270.0, 40.0, 38.0), REAL, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(GE), @R(9.5));
  @C(124) : @F(TO_BYTE), @R(1660.0, 480.0, 80.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_BYTE), @R(9.5));
  @C(189) : @F(ADD), @R(840.0, 480.0, 40.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(ADD), @R(9.5));
  @C(190) : @F(MOD), @R(1070.0, 1170.0, 60.0, 38.0), DINT, @I(@N(IN1), @L(9.5)), @I(@N(IN2), @L(29.5)), @O(@N(MOD), @R(9.5));
  @C(127) : @F(TO_BYTE), @R(1660.0, 1090.0, 80.0, 18.0), DINT, @I(@N(IN), @L(9.5)), @O(@N(TO_BYTE), @R(9.5));
  @CONN(115) : @IT(Rest), @R(1660.0, 760.0, 60.0, 19.0), DINT;
  @CONT(117) : @IT(Rest), @CONN(115), @R(121.0, 840.0, 157.0, 19.0), DINT;
  @CF(103) : @R(360.0, 95.0, 578.0, 63.0), @T("Real Value to 12 Character ASCII Byte Value$R$N$R$NRange: +/-0.001 $a0to $a0+/-2 147 483.000$R$N"), @POU;
  @CF(106) : @R(1560.0, 950.0, 87.0, 18.0), @T("Dot $".$""), @POU;
  @OLT(113) : @R(1130.0, 1040.0, 66.0, 19.0), @S(114,DIV);
  @OLT(104) : @R(170.0, 230.0, 108.0, 18.0), @S(105);
  @OLT(107) : @R(1540.0, 1030.0, 66.0, 19.0), @S(108,ADD);
  @OLT(109) : @R(700.0, 450.0, 40.0, 19.0), @S(110,DIV);
  @CF(20) : @R(1550.0, 230.0, 200.0, 29.0), @T("Sign / Vorzeichen"), @POU;
  @CF(21) : @R(500.0, 360.0, 60.0, 19.0), @T("DIV1"), @POU;
  @CF(22) : @R(630.0, 360.0, 60.0, 19.0), @T("ADD1"), @POU;
  @CF(23) : @R(630.0, 450.0, 60.0, 19.0), @T("DIV1"), @POU;
  @CF(24) : @R(500.0, 450.0, 60.0, 19.0), @T("MOD1"), @POU;
  @CF(25) : @R(840.0, 450.0, 60.0, 19.0), @T("ADD2"), @POU;
  @CF(26) : @R(630.0, 520.0, 60.0, 19.0), @T("MOD2"), @POU;
  @CF(27) : @R(840.0, 520.0, 60.0, 19.0), @T("DIV2"), @POU;
  @CF(28) : @R(1060.0, 520.0, 60.0, 19.0), @T("ADD3"), @POU;
  @CF(29) : @R(840.0, 590.0, 60.0, 19.0), @T("MOD3"), @POU;
  @CF(30) : @R(1060.0, 590.0, 60.0, 19.0), @T("DIV3"), @POU;
  @CF(31) : @R(1480.0, 590.0, 60.0, 19.0), @T("ADD4"), @POU;
  @CF(32) : @R(1060.0, 660.0, 60.0, 19.0), @T("MOD4"), @POU;
  @CF(33) : @R(1480.0, 660.0, 60.0, 19.0), @T("ADD5"), @POU;
  @CF(34) : @R(1330.0, 660.0, 60.0, 19.0), @T("DIV4"), @POU;
  @CF(35) : @R(1310.0, 730.0, 60.0, 19.0), @T("MOD5"), @POU;
  @CF(36) : @R(490.0, 810.0, 60.0, 19.0), @T("DIV5"), @POU;
  @CF(37) : @R(620.0, 810.0, 60.0, 19.0), @T("ADD6"), @POU;
  @CF(38) : @R(420.0, 880.0, 60.0, 19.0), @T("MOD6"), @POU;
  @CF(39) : @R(620.0, 880.0, 60.0, 19.0), @T("DIV6"), @POU;
  @CF(40) : @R(860.0, 880.0, 60.0, 19.0), @T("ADD7"), @POU;
  @CF(41) : @R(620.0, 980.0, 60.0, 19.0), @T("MOD7"), @POU;
  @CF(42) : @R(860.0, 980.0, 60.0, 19.0), @T("DIV7"), @POU;
  @CF(43) : @R(1070.0, 980.0, 60.0, 19.0), @T("ADD8"), @POU;
  @CF(44) : @R(860.0, 1060.0, 60.0, 19.0), @T("MOD8"), @POU;
  @CF(45) : @R(1070.0, 1060.0, 60.0, 19.0), @T("DIV8"), @POU;
  @CF(46) : @R(1480.0, 1060.0, 60.0, 19.0), @T("ADD9"), @POU;
  @CF(47) : @R(1070.0, 1140.0, 60.0, 19.0), @T("MOD9"), @POU;
  @CF(48) : @R(1480.0, 1140.0, 60.0, 19.0), @T("ADD10"), @POU;
  @OLT(49) : @R(1790.0, 370.0, 80.0, 19.0), @S(141);
  @OLT(50) : @R(1790.0, 460.0, 80.0, 19.0), @S(123);
  @OLT(51) : @R(1790.0, 530.0, 80.0, 19.0), @S(128);
  @OLT(52) : @R(1790.0, 600.0, 80.0, 19.0), @S(151);
  @OLT(53) : @R(1790.0, 670.0, 80.0, 19.0), @S(153);
  @OLT(54) : @R(1790.0, 820.0, 80.0, 19.0), @S(131);
  @OLT(55) : @R(1790.0, 890.0, 80.0, 19.0), @S(158);
  @OLT(56) : @R(1790.0, 930.0, 80.0, 19.0), @S(119);
  @OLT(57) : @R(1790.0, 990.0, 80.0, 19.0), @S(143);
  @OLT(58) : @R(1790.0, 1070.0, 80.0, 19.0), @S(126);
  @OLT(59) : @R(1790.0, 1150.0, 80.0, 19.0), @S(148);
  @OLT(60) : @R(270.0, 350.0, 130.0, 19.0), @S(112,TO_DINT);
  @OLT(61) : @R(710.0, 360.0, 40.0, 19.0), @S(185,ADD);
  @OLT(62) : @R(560.0, 810.0, 50.0, 19.0), @S(166,DIV);
  @OLT(63) : @R(710.0, 880.0, 40.0, 19.0), @S(181,DIV);
  @OLT(64) : @R(1410.0, 780.0, 80.0, 19.0), @S(116,MOD);
  @OLT(65) : @R(1150.0, 660.0, 80.0, 19.0), @S(176,MOD);
  @OLT(66) : @R(1140.0, 590.0, 80.0, 19.0), @S(173,DIV);
  @OLT(67) : @R(910.0, 590.0, 80.0, 19.0), @S(174,MOD);
  @OLT(68) : @R(1410.0, 670.0, 40.0, 19.0), @S(175,DIV);
  @OLT(69) : @R(920.0, 520.0, 80.0, 19.0), @S(169,DIV);
  @OLT(70) : @R(700.0, 520.0, 130.0, 19.0), @S(183,MOD);
  @OLT(71) : @R(630.0, 310.0, 80.0, 19.0), @S(101,DIV);
  @OLT(72) : @R(380.0, 530.0, 120.0, 19.0), @S(172,MOD);
  @CP(221) : 410.0, 849.5;
  @CP(223) : 390.0, 869.5;
  @CP(245) : 620.0, 489.5;
  @CP(256) : 170.0, 279.5;
  @CP(1) : 1279.5, 699.5;
  @CP(2) : 1259.5, 719.5;
  @CP(4) : 1029.5, 629.5;
  @CP(6) : 1009.5, 649.5;
  @CP(7) : 819.5, 559.5;
  @CP(9) : 799.5, 579.5;
  @CP(11) : 579.5, 579.5;
  @CP(12) : 1039.5, 1099.5;
  @CP(13) : 1009.5, 1119.5;
  @CP(14) : 829.5, 1019.5;
  @CP(15) : 799.5, 1039.5;
  @CP(16) : 479.5, 399.5;
  @CP(17) : 459.5, 419.5;
  @CP(18) : 599.5, 919.5;
  @CP(19) : 579.5, 939.5;

  @G(191) :
     @L(@C(129).TO_BYTE, @VF(128).i)
    ;
  @G(192) :
     @L(@C(132).TO_BYTE, @VF(131).i)
    ;
  @G(193) :
     @L(@C(142).TO_BYTE, @VF(141).i)
    ;
  @G(194) :
     @L(@C(144).TO_BYTE, @VF(143).i)
    ;
  @G(195) :
     @L(@C(149).TO_BYTE, @VF(148).i)
    ;
  @G(196) :
     @L(@C(152).TO_BYTE, @VF(151).i)
    ;
  @G(197) :
     @L(@C(154).TO_BYTE, @VF(153).i)
    ;
  @G(198) :
     @L(@C(156).SEL, @VF(155).i)
    ;
  @G(199) :
     @L(@C(159).TO_BYTE, @VF(158).i)
    ;
  @G(200) :
     @L(@VF(120).o, @VF(119).i)
    ;
  @G(201) :
     @L(@C(124).TO_BYTE, @VF(123).i)
    ;
  @G(202) :
     @L(@C(127).TO_BYTE, @VF(126).i)
    ;
  @G(203) :
     @L(@C(168).ADD, @C(129).IN)
    ;
  @G(204) :
     @L(@C(170).ADD, @C(132).IN)
    ;
  @G(205) :
     @L(@C(185).ADD, @C(142).IN)
    ;
  @G(206) :
     @L(@C(167).ADD, @C(144).IN)
    ;
  @G(207) :
     @L(@C(165).ADD, @C(149).IN)
    ;
  @G(208) :
     @L(@C(179).ADD, @C(152).IN)
    ;
  @G(209) :
     @L(@C(182).ADD, @C(154).IN)
    ;
  @G(210) :
     @L(@C(188).GE, @C(156).G)
    ;
  @G(211) :
     @L(@VF(163).o, @C(156).IN0)
    ;
  @G(212) :
     @L(@VF(164).o, @C(156).IN1)
    ;
  @G(213) :
     @L(@C(180).ADD, @C(159).IN)
    ;
  @G(214) :
     @L(@C(112).TO_DINT, @CP(16)),
     @L(@CP(16), @C(101).IN1),
     @L(@CP(16), @C(172).IN1)
    ;
  @G(216) :
     @L(@VF(161).o, @CP(17)),
     @L(@CP(17), @C(101).IN2),
     @L(@CP(17), @C(172).IN2)
    ;
  @G(218) :
     @L(@C(190).MOD, @C(165).IN1)
    ;
  @G(219) :
     @L(@VF(125).o, @C(165).IN2)
    ;
  @G(220) :
     @L(@CONT(117).o, @CP(221)),
     @L(@CP(221), @C(166).IN1),
     @L(@CP(221), @C(184).IN1)
    ;
  @G(222) :
     @L(@VF(140).o, @CP(223)),
     @L(@CP(223), @C(166).IN2),
     @L(@CP(223), @C(184).IN2)
    ;
  @G(224) :
     @L(@C(171).DIV, @C(167).IN1)
    ;
  @G(225) :
     @L(@VF(146).o, @C(167).IN2)
    ;
  @G(226) :
     @L(@C(169).DIV, @C(168).IN1)
    ;
  @G(227) :
     @L(@VF(118).o, @C(168).IN2)
    ;
  @G(228) :
     @L(@C(183).MOD, @CP(7)),
     @L(@CP(7), @C(169).IN1),
     @L(@CP(7), @C(174).IN1)
    ;
  @G(232) :
     @L(@C(166).DIV, @C(170).IN1)
    ;
  @G(233) :
     @L(@VF(147).o, @C(170).IN2)
    ;
  @G(234) :
     @L(@C(187).MOD, @CP(14)),
     @L(@CP(14), @C(171).IN1),
     @L(@CP(14), @C(186).IN1)
    ;
  @G(236) :
     @L(@VF(134).o, @CP(15)),
     @L(@CP(15), @C(171).IN2),
     @L(@CP(15), @C(186).IN2)
    ;
  @G(238) :
     @L(@C(114).DIV, @C(108).IN1)
    ;
  @G(239) :
     @L(@VF(139).o, @C(108).IN2)
    ;
  @G(244) :
     @L(@C(172).MOD, @CP(245)),
     @L(@CP(245), @C(110).IN1),
     @L(@CP(245), @C(183).IN1)
    ;
  @G(248) :
     @L(@C(176).MOD, @CP(1)),
     @L(@CP(1), @C(175).IN1),
     @L(@CP(1), @C(116).IN1)
    ;
  @G(250) :
     @L(@VF(121).o, @CP(2)),
     @L(@CP(2), @C(175).IN2),
     @L(@CP(2), @C(116).IN2)
    ;
  @G(252) :
     @L(@C(177).MUL, @C(112).IN)
    ;
  @G(253) :
     @L(@C(178).ABS, @C(177).IN1)
    ;
  @G(254) :
     @L(@VF(133).o, @C(177).IN2)
    ;
  @G(255) :
     @L(@VF(105).o, @CP(256)),
     @L(@CP(256), @C(178).IN),
     @L(@CP(256), @C(188).IN1)
    ;
  @G(257) :
     @L(@C(186).MOD, @CP(12)),
     @L(@CP(12), @C(114).IN1),
     @L(@CP(12), @C(190).IN1)
    ;
  @G(259) :
     @L(@VF(138).o, @CP(13)),
     @L(@CP(13), @C(114).IN2),
     @L(@CP(13), @C(190).IN2)
    ;
  @G(261) :
     @L(@C(173).DIV, @C(179).IN1)
    ;
  @G(262) :
     @L(@VF(135).o, @C(179).IN2)
    ;
  @G(263) :
     @L(@C(181).DIV, @C(180).IN1)
    ;
  @G(264) :
     @L(@VF(150).o, @C(180).IN2)
    ;
  @G(265) :
     @L(@C(184).MOD, @CP(18)),
     @L(@CP(18), @C(181).IN1),
     @L(@CP(18), @C(187).IN1)
    ;
  @G(267) :
     @L(@VF(130).o, @CP(19)),
     @L(@CP(19), @C(181).IN2),
     @L(@CP(19), @C(187).IN2)
    ;
  @G(269) :
     @L(@C(175).DIV, @C(182).IN1)
    ;
  @G(270) :
     @L(@VF(162).o, @C(182).IN2)
    ;
  @G(271) :
     @L(@C(101).DIV, @C(185).IN1)
    ;
  @G(272) :
     @L(@VF(136).o, @C(185).IN2)
    ;
  @G(273) :
     @L(@VF(145).o, @C(188).IN2)
    ;
  @G(274) :
     @L(@C(189).ADD, @C(124).IN)
    ;
  @G(275) :
     @L(@C(110).DIV, @C(189).IN1)
    ;
  @G(276) :
     @L(@VF(157).o, @C(189).IN2)
    ;
  @G(277) :
     @L(@C(108).ADD, @C(127).IN)
    ;
  @G(278) :
     @L(@C(116).MOD, @CONN(115).i)
    ;
  @G(3) :
     @L(@C(174).MOD, @CP(4)),
     @L(@CP(4), @C(173).IN1),
     @L(@CP(4), @C(176).IN1)
    ;
  @G(5) :
     @L(@VF(122).o, @CP(6)),
     @L(@CP(6), @C(173).IN2),
     @L(@CP(6), @C(176).IN2)
    ;
  @G(8) :
     @L(@VF(137).o, @CP(9)),
     @L(@CP(9), @C(169).IN2),
     @L(@CP(9), @C(174).IN2)
    ;
  @G(10) :
     @L(@VF(160).o, @CP(11)),
     @L(@CP(11), @C(183).IN2),
     @L(@CP(11), @C(110).IN2)
    ;
END_FUNCTION_BLOCK
END_NAMESPACE
